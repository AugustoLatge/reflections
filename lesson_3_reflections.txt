When would you want to use a remote repository rather than keeping all your work
local?

    When you want to turn your work accessible to others (public).

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because there might be other people working on the same remote and you
    may not be willing to integrate their changes yet.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    With forks you make a detached copy of a repository, any changes made to it
    won't affect the original one. Clones are copys of repositories into local
    machines. These copies are linked to the original repository and local
    changes can be pushed to it. Branches are a chain structure of commits that 
    belong to a repository and have the hole of compartmentalizing the code,
    while creating new features or correcting bugs.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It is that you can work with a version that is compatible with your changes,
    even if it is changed later by other person.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would use e-mails to send my last version of the code to the others.
    Keeping a track of the changes and guaranteeing that there are now conflicts
    would be the harder part. Merging files would be much harder. Getting back
    to older versions of the code could be easier.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
